# {{ image.pretty_name }} Container Image

{% include 'badges.j2' %}

## Description

[Rust](https://www.rust-lang.org/) is a systems programming language sponsored by Mozilla Research. It is designed to be a safe, concurrent, practical language, supporting functional and imperative-procedural paradigms. While syntactically similar to C++, Rust is designed for better memory safety without performance penalty.

## Usage

To compile and deploy an application, copy the sources, fetch dependencies, and build the binary:

```Dockerfile
# Build the application using the {{ image.pretty_name }} container image
FROM {{ image.pretty_reference }} as build

WORKDIR /app

COPY . ./

RUN cargo build --release

# Bundle the application into a BCI micro (or other BCI image)
FROM registry.suse.com/bci/bci-micro

COPY --from=build /app/target/release/hello /usr/local/bin/hello

CMD ["hello"]
```

Build and run the container image:

```ShellSession
$ podman build -t my-rust-app .
$ podman run -it --rm my-rust-app
```

There are situations, where you don't want to run an application inside a container.

To compile the application, without running it inside a container instance, use the following command:

```ShellSession
$ podman run --rm -v "$PWD":/app:Z -w /app {{ image.pretty_reference }} cargo build --release
```

**Note:** The Rust image is intended to be used as a build environment. For runtime, use smaller images such as `bci-base`, `bci-micro`, or `bci-minimal`.

{% include 'licensing_and_eula.j2' %}
